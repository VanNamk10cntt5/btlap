
public class Nhanvien {
    // Khai báo các thuộc tính của lớp Nhanvien
    private String tenNhanVien; // Tên nhân viên
    private double luongCoBan; // Lương cơ bản
    private double heSoLuong; // Hệ số lương
    private static double Luong_max = 10000000; // Lương tối đa

    // Hàm khởi tạo của lớp Nhanvien
    public Nhanvien(String tenNhanVien, double luongCoBan, double heSoLuong) {
        this.tenNhanVien = tenNhanVien;
        this.luongCoBan = luongCoBan;
        this.heSoLuong = heSoLuong;
    }

    // Phương thức tính lương của nhân viên
    public double tinhLuong() {
        return luongCoBan * heSoLuong;
    }

    // Phương thức in thông tin của nhân viên
    public void inTTin() {
        System.out.println("Tên nhân viên: " + tenNhanVien);
        System.out.println("Lương cơ bản: " + luongCoBan);
        System.out.println("Hệ số lương: " + heSoLuong);
        System.out.println("Lương: " + tinhLuong());
    }

    // Phương thức tăng hệ số lương của nhân viên
    public boolean tangLuong(double tangHeSoLuong) {
        double newHeSoLuong = heSoLuong + tangHeSoLuong;
        if (tinhLuongMax(newHeSoLuong)) { // Kiểm tra lương của nhân viên có vượt quá lương tối đa không
            return false;
        }
        heSoLuong = newHeSoLuong;
        return true;
    }

    // Phương thức tính lương tối đa của nhân viên khi thay đổi hệ số lương
    private boolean tinhLuongMax(double newHeSoLuong) {
        return tinhLuong() > Luong_max && tinhLuong(newHeSoLuong) > Luong_max;
    }

    // Các phương thức get và set cho các thuộc tính của lớp Nhanvien
    public String getTenNhanVien() {
        return tenNhanVien;
    }

    public void setTenNhanVien(String tenNhanVien) {
        this.tenNhanVien = tenNhanVien;
    }

    public double getLuongCoBan() {
        return luongCoBan;
    }

    public void setLuongCoBan(double luongCoBan) {
        this.luongCoBan = luongCoBan;
    }

    public double getHeSoLuong() {
        return heSoLuong;
    }

    public void setHeSoLuong(double heSoLuong) {
        this.heSoLuong = heSoLuong;
    }

    public static double getLuong_max() {
        return Luong_max;
    }

    public static void setLuong_max(double luong_max) {
        Luong_max = luong_max;
    }
}

#bt1

public class bai1 {
    // File bai1.java

// Định nghĩa gói "myPackage" chứa các lớp liên quan đến hình học
package myPackage;

// Lớp HinhVuong biểu diễn hình vuông
public class HinhVuong {
    // Thuộc tính canh biểu diễn cạnh của hình vuông
    private double canh;

    // Phương thức khởi tạo với tham số cạnh
    public HinhVuong(double canh) {
        this.canh = canh;
    }

    // Phương thức getter trả về giá trị của thuộc tính canh
    public double getCanh() {
        return canh;
    }

    // Phương thức setter thiết lập giá trị của thuộc tính canh
    public void setCanh(double canh) {
        this.canh = canh;
    }

    // Phương thức tính diện tích của hình vuông
    public double tinhDienTich() {
        return canh * canh;
    }
}

// Lớp HinhTron biểu diễn hình tròn
public class HinhTron {
    // Thuộc tính banKinh biểu diễn bán kính của hình tròn
    private double banKinh;

    // Phương thức khởi tạo với tham số bán kính
    public HinhTron(double banKinh) {
        this.banKinh = banKinh;
    }

    // Phương thức getter trả về giá trị của thuộc tính banKinh
    public double getBanKinh() {
        return banKinh;
    }

    // Phương thức setter thiết lập giá trị của thuộc tính banKinh
    public void setBanKinh(double banKinh) {
        this.banKinh = banKinh;
    }

    // Phương thức tính diện tích của hình tròn
    public double tinhDienTich() {
        return Math.PI * banKinh * banKinh;
    }
}

    
}

#bt2

public class bai2 {
    public bai2() {
    }

    public class Vector {
        private double x;
        private double y;
        private double z;
    
        // Phương thức khởi tạo với 3 tham số
        public Vector(double x, double y, double z) {
            this.x = x;
            this.y = y;
            this.z = z;
        }
    
        // Phương thức lấy giá trị x
        public double getX() {
            return x;
        }
    
        // Phương thức lấy giá trị y
        public double getY() {
            return y;
        }
    
        // Phương thức lấy giá trị z
        public double getZ() {
            return z;
        }
    
        // Phương thức cộng 2 vector
        public Vector cong(Vector v) {
            return new Vector(x + v.getX(), y + v.getY(), z + v.getZ());
        }
    
        // Phương thức trừ 2 vector
        public Vector tru(Vector v) {
            return new Vector(x - v.getX(), y - v.getY(), z - v.getZ());
        }
    
        // Phương thức nhân vector với 1 hằng số
        public Vector nhan(double k) {
            return new Vector(k * x, k * y, k * z);
        }
    
        // Phương thức nhân vô hướng 2 vector
        public double nhanVH(Vector v) {
            return x * v.getX() + y * v.getY() + z * v.getZ();
        }
    }
    
    
}
